{"ast":null,"code":"var _jsxFileName = \"/Users/rashmibhaskar/MOLA-twitter-app/client/src/User.js\";\nimport React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class User extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearchUser = () => {\n      this.setState({\n        userID: \"\",\n        tweets: [],\n        userError: \"\"\n      });\n      this.setState({\n        isLoading: true\n      });\n      fetch(`/api/twitter/${this.state.userName}`).then(res => res.json()).then(data => {\n        if (data.body.data.id) {\n          this.setState({\n            userID: data.body.data.id\n          });\n          fetch(`/api/tweets/${this.state.userID}`).then(res => res.json()).then(data => {\n            console.log(data.body.data);\n            this.setState({\n              tweets: data.body.data,\n              isLoading: false\n            });\n\n            if (data.body.data) {\n              var ele = document.createElement('a');\n              ele.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(data.body.data)));\n              ele.setAttribute('download', this.state.userName + '.json');\n              ele.style.display = 'none';\n              document.body.appendChild(ele);\n              ele.click();\n              document.body.removeChild(ele);\n            }\n          });\n        }\n\n        if (data.body.errors) {\n          this.setState({\n            userError: \"Oops! User does not exist.....\",\n            isLoading: false\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          userError: \"Oops! User does not exist.....\",\n          isLoading: false\n        });\n      });\n    };\n\n    this.onInputchange = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.state = {\n      userID: \"\",\n      userName: \"\",\n      tweets: [],\n      userError: \"\",\n      isLoading: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Username\",\n          name: \"userName\",\n          type: \"text\",\n          value: this.state.userName,\n          onChange: event => this.onInputchange(event),\n          className: \"twitter-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSearchUser,\n          className: \"twitter-button\",\n          children: \"Search User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), this.state.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          variant: \"light\",\n          size: \"md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 58\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }, this) : this.state.userID !== \"\" ? this.state.tweets ? this.state.tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter-row\",\n        children: tweet.text\n      }, tweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 60\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-error\",\n        children: \"There are no Tweets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 124\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-error\",\n        children: this.state.userError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/rashmibhaskar/MOLA-twitter-app/client/src/User.js"],"names":["React","Spinner","User","Component","constructor","props","handleSearchUser","setState","userID","tweets","userError","isLoading","fetch","state","userName","then","res","json","data","body","id","console","log","ele","document","createElement","setAttribute","encodeURIComponent","JSON","stringify","style","display","appendChild","click","removeChild","errors","catch","error","onInputchange","event","target","value","render","map","tweet","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner'\n\nexport default class User extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      userID:\"\",\n      userName:\"\",\n      tweets:[],\n      userError:\"\",\n      isLoading:false\n    }\n  }\n\n  handleSearchUser=()=>{\n    this.setState({\n      userID:\"\",\n      tweets:[],\n      userError:\"\"\n    })\n    this.setState({isLoading:true})\n    fetch(`/api/twitter/${this.state.userName}`)\n    .then((res) => res.json())\n    .then((data) => \n    { \n      if(data.body.data.id)\n      {\n        this.setState({userID:data.body.data.id});\n        fetch(`/api/tweets/${this.state.userID}`)\n        .then((res) => res.json())\n        .then((data) => {console.log(data.body.data)\n        this.setState({tweets:data.body.data,isLoading:false})\n        if(data.body.data){\n        var ele = document.createElement('a');\n        ele.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(data.body.data)));\n        ele.setAttribute('download', this.state.userName+'.json');\n        ele.style.display = 'none';\n        document.body.appendChild(ele);\n        ele.click();\n        document.body.removeChild(ele);\n        }\n        });\n      }\n      if(data.body.errors){\n        this.setState({userError:\"Oops! User does not exist.....\",isLoading:false})\n      }\n    })\n    .catch((error)=>{console.log(error)\n    this.setState({userError:\"Oops! User does not exist.....\",isLoading:false})\n  });\n  }\n\n  onInputchange=(event)=> {\n    this.setState({\n      userName: event.target.value\n    });\n  }\n\n  render() {\n    return (\n    <>\n          <div className=\"twitter-form\">\n            <input\n              placeholder='Enter Username'\n              name=\"userName\"\n              type='text'\n              value={this.state.userName}\n              onChange={(event)=>this.onInputchange(event)}\n              className='twitter-input'\n            />\n            <button onClick={this.handleSearchUser} className='twitter-button'>\n              Search User\n            </button>\n          </div>\n          {this.state.isLoading?<div className=\"spinner\"><Spinner animation=\"border\" variant=\"light\" size=\"md\" /></div>:\n          this.state.userID!==\"\"?\n            this.state.tweets?this.state.tweets.map(tweet=><div className=\"twitter-row\" key={tweet.id}>{tweet.text}</div>):<div className=\"user-error\">There are no Tweets</div>:\n            <div className=\"user-error\">{this.state.userError}</div>\n          \n        }\n    </>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}