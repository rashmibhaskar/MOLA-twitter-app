{"ast":null,"code":"var _jsxFileName = \"/Users/rashmibhaskar/twitter-app/src/User.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class User extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      fetch(`/api/tweets/${this.state.userID}`).then(res => res.json()).then(data => console.log(data));\n    };\n\n    this.handleSearchUser = () => {\n      fetch(`/api/twitter/${this.state.userName}`).then(res => res.json()).then(data => {\n        console.log(data.body.data.id);\n\n        if (data.body.data.id) {\n          this.setState({\n            userID: data.body.data.id\n          });\n        }\n\n        ;\n        fetch(`/api/tweets/${this.state.userID}`).then(res => res.json()).then(data => {\n          console.log(data.body.data);\n          this.setState({\n            tweets: data.body.data\n          });\n        });\n      });\n    };\n\n    this.onInputchange = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.state = {\n      userID: \"\",\n      userName: \"\",\n      tweets: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/api\").then(res => res.json()).then(data => console.log(data.message)); // fetch(\"/api/twitter/bts_bighit\")\n    //   .then((res) => res.json())\n    //   .then((data) => {console.log(data.body.data.id)\n    //    this.setState({userID:data.body.data.id})});\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //   <ul>\n      //     { this.state.persons.map(person => <li>{person.name}</li>)}\n      //   </ul>\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Enter Username\",\n            name: \"userName\",\n            type: \"text\",\n            value: this.state.userName,\n            onChange: event => this.onInputchange(event),\n            className: \"todo-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleSearchUser,\n            className: \"todo-button\",\n            children: \"Search User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), this.state.tweets ? this.state.tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-row\",\n          children: tweet.text\n        }, tweet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 61\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-row\",\n          children: \"There are no Tweets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 122\n        }, this)]\n      }, void 0, true) //<button onClick={this.handleClick}>Hello</button>\n\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/rashmibhaskar/twitter-app/src/User.js"],"names":["React","User","Component","constructor","props","handleClick","fetch","state","userID","then","res","json","data","console","log","handleSearchUser","userName","body","id","setState","tweets","onInputchange","event","target","value","componentDidMount","message","render","map","tweet","text"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default class User extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      userID:\"\",\n      userName:\"\",\n      tweets:[]\n    }\n  }\n\n\n  componentDidMount() {\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => console.log(data.message));\n    // fetch(\"/api/twitter/bts_bighit\")\n    //   .then((res) => res.json())\n    //   .then((data) => {console.log(data.body.data.id)\n    //    this.setState({userID:data.body.data.id})});\n  }\n\n  handleClick=()=>{\n    fetch(`/api/tweets/${this.state.userID}`)\n    .then((res) => res.json())\n    .then((data) => console.log(data));\n  }\n\n  handleSearchUser=()=>{\n    fetch(`/api/twitter/${this.state.userName}`)\n    .then((res) => res.json())\n    .then((data) => {console.log(data.body.data.id)\n     if(data.body.data.id){\n      this.setState({userID:data.body.data.id})};\n      fetch(`/api/tweets/${this.state.userID}`)\n      .then((res) => res.json())\n      .then((data) => {console.log(data.body.data)\n        this.setState({tweets:data.body.data})\n      });\n     }\n    );\n  }\n\n  onInputchange=(event)=> {\n    this.setState({\n      userName: event.target.value\n    });\n  }\n\n  render() {\n    return (\n    //   <ul>\n    //     { this.state.persons.map(person => <li>{person.name}</li>)}\n    //   </ul>\n    <>\n          <div className=\"todo-form\">\n            <input\n              placeholder='Enter Username'\n              name=\"userName\"\n              type='text'\n              value={this.state.userName}\n              onChange={(event)=>this.onInputchange(event)}\n              className='todo-input'\n            />\n            <button onClick={this.handleSearchUser} className='todo-button'>\n              Search User\n            </button>\n          </div>\n            {this.state.tweets?this.state.tweets.map(tweet=><div className=\"todo-row\" key={tweet.id}>{tweet.text}</div>):<div className=\"todo-row\">There are no Tweets</div>}\n          </>\n    //<button onClick={this.handleClick}>Hello</button>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}